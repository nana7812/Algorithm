[해시 개념] 

 개념: key값을 입력 받음 →  해시함수 → 해시코드 반환 → 배열의 인덱스로 환산 → 데이터 접근

 

[해시의 장점(해시를 쓰는 이유)] 

 장점: 검색 속도가 빠름

 설명: hashcode 자체가  배열의 인덱스로 사용돼서(hashcode 나머지 연산) 바로 데이터에 접근


[해싱 절차  및 용어 개념] 

 key ,value : key와 value가 1:1로 연관되어있고, key를 이용하여 value 도출

 hash function :key 값을 넣으면 hashcode를 반환해주는 함수

 hash code : hash fucntion을 통해 반환된 값

 index : hashcoded의 나머지 크기


[collision 이란] 

개념: 서로 다른 key값을 해시한 결과가 동일한 경우

(different keys → same code/ different code → same index) 

해결방법: 입력받은 key를 가지고 얼마나 균형있게 분배!

      → 배열방에 바로 저장하는게 아니라 배열 방 안에 링크 리스트를 선언하고 할당될 때마다 리스트추가 


[최악의 시간 복잡도] 

 답: o(n)

 이유:데이터 충돌이 발생한 경우 연결된 리스트들까지 검색해야 한다.


[최적의 시간 복잡도] 

 답: o(1)

 이유: 각각의 key 값이 해시함수에 의해 index를 가지게 되어 바로 접근 할 수 있다.